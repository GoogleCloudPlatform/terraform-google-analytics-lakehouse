# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This defines the Google Workflow for the Analytics lakehouse Soultion: https://console.cloud.google.com/products/solutions/details/analytics-lakehouse
# This Workflow executes through Terraform. For Google Workflows executed via Terraform, variables are defined such that:
#
#     - Terraform environment variables are denoted by $
#     - Google Workflow variables are escaped via $$
#
# To modify this Workflow to stand alone (no Terraform):
#
#     - Replace vars in `main` -> `steps` -> `assign` with your own (or use https://cloud.google.com/workflows/docs/passing-runtime-arguments#gcloud)
#     - Change all $$ to $

main:
  params: []
  steps:
    # If this workflow has been run before, do not run again
    - sub_check_if_run:
        steps:
          - assign_values:
              assign:
                - project_id: $${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                - location: $${sys.get_env("GOOGLE_CLOUD_LOCATION")}
                - workflow_id: $${sys.get_env("GOOGLE_CLOUD_WORKFLOW_ID")}
          - get_executions:
              call: http.get
              args:
                url: $${"https://workflowexecutions.googleapis.com/v1/projects/"+project_id+"/locations/"+location+"/workflows/"+workflow_id+"/executions"}
                auth:
                  type: OAuth2
              result: Operation
          - check_if_run:
              switch:
                - condition: $${len(Operation.body.executions) > 1}
                  next: end
    - sub_create_taxonomy:
        call: create_taxonomy
        result: create_taxonomy_output

# Subworkflow to Dataplex taxonomy
create_taxonomy:
  steps:
    - assign_values:
        assign:
          - project_id: $${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          - location: $${sys.get_env("GOOGLE_CLOUD_LOCATION")}
    - ufdataplex_job:
        call: http.post
        args:
          url: $${"https://dataplex.googleapis.com/v1/projects/"+project_id+"/locations/"+location+"/dataTaxonomies?alt=json&dataTaxonomyId=sample-taxonomy&validateOnly=False"}
          auth:
            type: OAuth2
          body:
            description: Sample Taxonomy Description
            displayName: Sample Taxonomy Display Name
        result: Operation
    - returnResult:
        return: $${Operation}
