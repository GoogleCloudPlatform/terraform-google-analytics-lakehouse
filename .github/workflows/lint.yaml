# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is automatically generated from values at:
# https://github.com/GoogleCloudPlatform/cloud-foundation-toolkit/blob/master/infra/terraform/test-org/org/locals.tf

name: 'lint'

on:
  pull_request:
    branches:
      - main

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  lint:
    name: 'lint'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - id: variables
        run: |
          MAKEFILE=$(find . -name Makefile -print -quit)
          if [ -z "$MAKEFILE" ]; then
            echo dev-tools=gcr.io/cloud-foundation-cicd/cft/developer-tools:1 >> "$GITHUB_OUTPUT"
          else
            VERSION=$(grep "DOCKER_TAG_VERSION_DEVELOPER_TOOLS := " $MAKEFILE | cut -d\  -f3)
            IMAGE=$(grep "DOCKER_IMAGE_DEVELOPER_TOOLS := " $MAKEFILE | cut -d\  -f3)
            REGISTRY=$(grep "REGISTRY_URL := " $MAKEFILE | cut -d\  -f3)
            echo dev-tools=${REGISTRY}/${IMAGE}:${VERSION} >> "$GITHUB_OUTPUT"
          fi
      - run: docker run --rm -e ENABLE_BPMETADATA -v ${{ github.workspace }}:/workspace ${{ steps.variables.outputs.dev-tools }} /usr/local/bin/test_lint.sh
        env:
          ENABLE_BPMETADATA: 1
  notebook_format_and_lint:
    name: 'notebook format and lint'
    runs-on: 'ubuntu-latest'
    steps:
    - name: Check for .ipynb files
    run: |
      if [ -z "$(find . -name '*.ipynb' -print -quit)" ]; then
        echo "No .ipynb files found. Skipping notebook format and lint job."
        exit 0
      fi
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install requirements
      run: python3 -m pip install -U -r .github/workflows/requirements.txt
    - name: Format and lint notebooks
      run: |
        set +e

        .github/workflows/run_linter.sh -t
        RTN=$?

        if [ "$RTN" != "0" ]; then
          echo "There were problems formatting/linting the notebooks."
          echo "Please run the following commands locally from the root directory to attempt to autofix the issues:"
          echo ""
          echo "python3 -m pip install -U -r .github/workflows/linter/requirements.txt"
          echo ".github/workflows/linter/run_linter.sh"
          echo ""
          echo "If it can't be autofixed, please fix them manually."
          echo "Then, commit the fixes and push again."
          exit 1
        fi
